name: github deploy

on:
    push:
        branches: ["main"]

jobs:
    compile: 
        runs-on: ubuntu-latest

        steps: 
            - name: checkout code
              uses: actions/checkout@v4

            - name: setup node js
              uses: actions/setup-node@v4
              with:
                node-version: "20"

            - name: check js syntax
              run: find . -name ".js" -exec node --check {} +    
        

    gitleaks_scans:

        runs-on: ubuntu-latest
        needs: compile

        steps:
            - name: checkout code
              uses: actions/checkout@v4

            - name: gitleaks setup
              uses: gitleaks/gitleaks-action@v2

            - name: gitleaks scan
              run: gitleaks detect --source . --exit-code 1  

    sonarq_setup:
        
        runs-on: ubuntu-latest
        needs: gitleaks_scans

        steps: 
            - name: checkout code 
              uses: actions/checkout@v4

            - name: sonarQube scan
              uses: SonarSource/sonarcloud-github-action@v2
              with:
                  args: >
                    -Dsonar.projectKey=lovkush7_CICD-PIPELINE
                    -Dsonar.organization=lovkush7
              env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    
    build:

        runs-on: ubuntu-latest
        needs: sonarq_setup

        steps:
            - name: checkout code 
              uses: actions/checkout@v4

            - name: setup node js
              uses: actions/setup-node@v4
              with: 
                node-version: "20"
                
            - name: cache dependicies
              uses: actions/cache@v4
              with:
                path: ~/.npm    
                key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

            - name: install dependicies
              run: npm install
              
            # - name: build project
            #   run: npm run build  

            # - name: upload dist artifact
            #   uses: actions/upload-artifact@v4
            #   with: 
            #     name: dist-files
            #     path: dist  


    deploy: 
      runs-on: ubuntu-latest
      needs: build

      # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
      permissions:
        pages: write      # to deploy to Pages
        id-token: write   # to verify the deployment originates from an appropriate source
  
      # Deploy to the github-pages environment
      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}
  
      # Specify runner + deployment step
   
      steps:
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v4
          with: 
            token: ${{secrets.GITHUB_TOKEN}}



       
